# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

--- 
extends: http://vwf.example.com/scene.vwf
properties:
  navmode: walk
  rotationSpeed: 2
  translationSpeed: 10
children:
  floor:
    extends: http://vwf.example.com/threejs/plane.vwf
    type: mesh/definition
    properties:
      meshDefinition: { "width": 1000, "height": 1000, "widthSegments": 100, "heightSegments": 100 }
    children:
      material:
        extends: http://vwf.example.com/material.vwf
        properties:
          texture: 'images/checkerboard.jpg'
          textureWrapT: repeat
          textureWrapS: repeat
          textureRepeat: [ 5, 5 ]
  planeTest:
    extends: http://vwf.example.com/threejs/plane.vwf
    implements:
    - http://vwf.example.com/spin-on-click.vwf 
    - http://vwf.example.com/sway-on-click.vwf 
    properties:
      meshDefinition: { "width": 1000, "height": 1000, "color": "lightgoldenrodyellow" }
      translation: [ 200, 0, 0 ]
      rotation: [ 1, 0, 0, -90 ]
      sway-swaying: false
      spin-spinning: false
      spin-axis: [ 0, 0, 1 ]
    children:
      material:
        extends: http://vwf.example.com/material.vwf
    scripts:
    - |
      this.initialize = function() {
        this['sway-swaying'] = true;
        this['spin-spinning'] = true;
      }
  hemi1:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "hemisphere"
      enable: true
      color: 0x777777
      intensity: 0.6
      groundColor: 0x000000
methods:
  initializeScene:
scripts:
- |
    this.initialize = function(){
      this.future(1.0).initializeScene();
    }
    this.initializeScene = function() {
        //this.camera.position = [ 0, 10, 0 ];
        this.camera.translation = [ 0, -500, 0 ];
        this.camera.near = 1;  
        this.camera.far = 100000;

        var boxDef = {
          "extends": 'http://vwf.example.com/threejs/cube.vwf',
          "type": 'mesh/definition',
          "properties": {
            "meshDefinition": { "width": 5, "height": 5, "depth": 5, "widthSegments": 5, "heightSegments": 5, "depthSegments": 5 }, 
            "translation": [ 0, 0, 0 ]
          },
          "children": {
            "material": {
              "extends": 'http://vwf.example.com/material.vwf',
              "properties": {
                "texture": 'images/UV_Grid_Sm.jpg'
              }
            }
          }
        };

        //var boxCount = 1;
        //for( var i = 0; i < 10; i++ ) {
        //    for( var j = 0; j < 10; j++ ) {
        //        for( var k = 0; k < 10; k++ ) {
        //            boxDef.properties.translation = [ 7+20*(5-i), 10+20*j, 7+20*(5-k) ];
        //            this.children.create( "box"+boxCount, boxDef ); 
        //            boxCount++;
        //        }
        //    }
        //}
    }    
