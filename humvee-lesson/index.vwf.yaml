# Copyright 2013 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

---
extends: http://vwf.example.com/navscene.vwf
properties:
  ambientColor: [ 183, 183, 183 ]
  backgroundColor: [ 83, 157, 194 ]
  navmode: "walk"
  translationSpeed: 10.0
children:
  flat_terrain:
    extends: http://vwf.example.com/node3.vwf
    source: terrain.dae
    type: model/vnd.collada+xml
    properties:
      translation: [ -500, 1000, 0 ]
      scale: [ 0.001, 0.001, 0.000001 ]
  humvee:
    extends: http://vwf.example.com/node3.vwf
    source: humvee.dae
    type: model/vnd.collada+xml
    children:
      bone2: 
        extends: http://vwf.example.com/node3.vwf 
        children: 
          Scene: 
            extends: http://vwf.example.com/node3.vwf 
            children: 
              DoorDriverFront: 
                extends: http://vwf.example.com/node3.vwf 
                implements: 
                - http://vwf.example.com/animation.vwf
                - http://vwf.example.com/node3/animation.vwf
                - http://vwf.example.com/control.vwf
                properties:
                  controlScale: 2
                children: 
                  Untitled_006: 
                    extends: http://vwf.example.com/node3.vwf 
                    children: 
                      glgeObj29: 
                        extends: http://vwf.example.com/node3.vwf 
                  alpha:
                    implements:
                    - http://vwf.example.com/animation/position.vwf
                    - http://vwf.example.com/control/position.vwf
                    properties:
                      sequence: 0
                  beta:
                    implements:
                    - http://vwf.example.com/animation/position.vwf
                    - http://vwf.example.com/control/position.vwf
                    properties:
                      sequence: 1
                      animationTime: 0.125
                scripts:
                - |
                  this.animationUpdate = function(time, duration) {
                    if(!this.initialTransform) {
                      this.initialTransform = this.transform;
                    }
                    this.transform = this.initialTransform;
                    this.rotateBy([0, 0, -1, time * 360], 0, "rotated");
                  }
              HumveeBody: 
                extends: http://vwf.example.com/node3.vwf 
                children: 
                  glgeObj38: 
                    extends: http://vwf.example.com/node3.vwf 
  lesson:
    extends: http://vwf.example.com/lesson/task.vwf
    properties:
      scenePath: /
    children:
      enterVehicle:
        extends: http://vwf.example.com/lesson/task.vwf
        properties:
          text: "1.0 Enter the Vehicle"
          cameraPoseRef: /cameraPose1
        children:
          walkToVehicle:
            extends: http://vwf.example.com/lesson/task.vwf
            properties:
              text: "1.1 Walk to the vehicle"
            children:
              walkInstructions:
                extends: http://vwf.example.com/lesson/task.vwf
                properties:
                  text: "Use WASD to navigate to the vehicle door."
            scripts:
            - |
              this.entering = function() {
                this.logger.info( "Step: Walk to Vehicle" );
                this.parent.parent.parent.keyUp = this.events.add( function() {
                  var trans = this.parent.parent.parent.camera.translation;
                  if( trans[0] > -65 && trans[0] < -25 && trans[1] > -200 && trans[1] < -100 && trans[2] > 35 && trans[2] < 95 )
                  {
                    this.logger.info( "Step: Walk to Vehicle - Completed" );
                    this.completed();                    
                    this.parent.parent.parent.keyUp = this.parent.parent.parent.events.flush( this );
                  }
                }, this );
              }
          openDoor:
            extends: http://vwf.example.com/lesson/task.vwf
            properties:
              text: "1.2 Open vehicle door"
            children:
              openDoorInstructions:
                extends: http://vwf.example.com/lesson/task.vwf
                properties:
                  text: "Click on the door to open it."
            scripts:
            - |
              this.entering = function() {
                this.logger.info( "Step: Open Door" );
                var humveeDoor = this.find( "/humvee/bone2/Scene/DoorDriverFront" )[ 0 ];
                humveeDoor.pointerClick = humveeDoor.events.add( function() {
                  if(this.parent.parent.parent.humvee.bone2.Scene.DoorDriverFront.controlValue == 0)
                  {
                    humveeDoor.pointerClick = humveeDoor.events.flush( this );
                    this.logger.info( "Step: Open Door - Completed" );
                    this.completed();
                  }
                }, this );
              }
          jumpIn:
            extends: http://vwf.example.com/lesson/task.vwf
            properties:
              text: "1.3 Jump into the driver's seat"
            children:
              jumpInInstructions:
                extends: http://vwf.example.com/lesson/task.vwf
                properties:
                  text: "Click on the vehicle's driver seat to jump in."
            scripts:
            - |
              this.entering = function() {
                this.logger.info( "Step: Jump In" );
                var humvee = this.find( "/humvee/bone2/Scene/HumveeBody" )[ 0 ];
                humvee.pointerClick = humvee.events.add( function() {
                  humvee.pointerClick = humvee.events.flush( this );
                  this.logger.info( "Step: Jump In - Completed" );
                  this.completed();
                }, this );
              }
          closeDoor:
            extends: http://vwf.example.com/lesson/task.vwf
            properties:
              text: "1.4 Close vehicle door"
              cameraPoseRef: /cameraPose14
            children:
              openDoorInstructions:
                extends: http://vwf.example.com/lesson/task.vwf
                properties:
                  text: "Click on the door to close it."
            scripts:
            - |
              this.entering = function() {
                this.logger.info( "Step: Close Door" );
                var humveeDoor = this.find( "/humvee/bone2/Scene/DoorDriverFront" )[ 0 ];
                humveeDoor.pointerClick = humveeDoor.events.add( function() {
                  humveeDoor.pointerClick = humveeDoor.events.flush( this );
                  this.logger.info( "Step: Close Door - Completed" );
                  this.completed();
                }, this );
              }
        scripts:
        - |
          this.entering = function() {
            
          }
      startEngine:
        extends: http://vwf.example.com/lesson/task.vwf
        properties:
          text: "2.0 Start the Engine"
          cameraPoseRef: /cameraPose2
        children:
          turnKey:
            extends: http://vwf.example.com/lesson/task.vwf
            properties:
              text: "2.1 Turn the key"
          shiftGear:
            extends: http://vwf.example.com/lesson/task.vwf
            properties:
              text: "2.2 Shift gear into drive"
        scripts:
        - |
          this.entering = function() {
            
          }
      driveVehicle:
        extends: http://vwf.example.com/lesson/task.vwf
        properties:
          text: "3.0 Drive Vehicle"
          cameraPoseRef: /cameraPose3
        children:
          pressGas:
            extends: http://vwf.example.com/lesson/task.vwf
            properties:
              text: "3.1 Press gas pedal."
        scripts:
        - |
          this.entering = function() {
            
          }
  cameraPose1:
    extends: http://vwf.example.com/node3.vwf
    properties:
      translation: [ -45, -380, 74 ]
  cameraPose14:
    extends: http://vwf.example.com/node3.vwf
  cameraPose2:
    extends: http://vwf.example.com/node3.vwf
  cameraPose3:
    extends: http://vwf.example.com/node3.vwf
  dir1:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "directional"
      quadraticAttenuation: 10
      specular: false 
      rotation: [ 1, 0, 0, -10 ]
  dir2:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "directional"
      quadraticAttenuation: 10
      specular: false 
      rotation: [ -1, 0, 0, 200 ]
scripts:
- |
  this.initialize = function() {
    this.camera.translation = this.cameraPose1.translation;
    this.camera.far = 3000;

    this.cameraPose14.transform = [-0.8957634568214417,0.44452738761901855,0,0,
      -0.44452738761901855,-0.8957634568214417,0,0,
      0,0,1,0,
      -14.165600776672363,-7.067508220672607,66.83444213867188,1];

    this.cameraPose2.transform = [-0.2800654172897339,0.9599801301956177,0,0,
      -0.9599801301956177,-0.2800654172897339,0,0,
      0,0,1,0,
      9.367589950561523,-10.260942459106445,66.83444213867188,1];

    this.cameraPose3.transform = this.cameraPose2.transform;
  }