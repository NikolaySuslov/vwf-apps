---
extends: http://vwf.example.com/navscene.vwf
properties:
  activeCamera: "http-vwf-example-com-camera-vwf-camera"
  backgroundColor: [ 83, 157, 194 ]
  navmode: "orbit"
  mouseMode:
    set: |
      if( value == "orbit" ) {
        this.navmode = "orbit";
      } else {
        this.navmode = "none";
      }
    value: "orbit"
children:
  flat_terrain:
    extends: http://vwf.example.com/node3.vwf
    source: models/vwf_terrain.dae
    type: model/vnd.collada+xml
    properties:
      translation: [ 0, 0, -1000 ]
      scale: [ 0.008, 0.008, 0.020 ]
  sceneCenter:
    extends: http://vwf.example.com/node3.vwf
    properties:
      translationnew: [ 0, 0, 0 ]
  predGroup:
    extends: http://vwf.example.com/node3.vwf
    implements:
    - http://vwf.example.com/fly.vwf
    properties:
      fly-flying: true
    children:
      predator:
        extends: http://vwf.example.com/node3.vwf
        source: models/Predator.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ 0, 500, 1800 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: 50
      cone:
        extends: http://vwf.example.com/node3.vwf
        source: models/cone.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ 0, -300, -1100 ]
          rotation: [ 1, 0, 0, 0 ]
          scale: [ 8, 8, 16 ]
scripts:
- |
  this.initialize = function() {
    this.camera.translation = [ 0, 20000, 10000 ];
    this.camera.far = 500000;
    this.camera.near = 2;
    this.camera.lookAt = "http-vwf-example-com-node3-vwf-sceneCenter";
  }
  var pushpinIndex = 1;
  var pushpin = {
    extends: "http://vwf.example.com/node3.vwf",
    source: "models/pushpinblack.dae",
    type: "model/vnd.collada+xml",
    properties: {
      scale: 6
    },
  };
  this.pointerUp = function( parms, pickInfo ){
    if( this.mouseMode == "pindrop") {
        this.pindrop( pickInfo );
    }
  }
  this.pindrop = function( pickInfo ) {
    if ( pickInfo && pickInfo.globalPosition ) {
      pushpin.properties.translation = pickInfo.globalPosition;

      var name = "pushpin"+pushpinIndex;
      this.children.create( pushpin, name );
      pushpinIndex++;
    }
  }
