--- 
extends: http://vwf.example.com/glge.vwf
properties:
  activeCamera: "http-vwf-example-com-camera-vwf-camera"
  backgroundColor: [ 83, 157, 194 ]
  navmode: "orbit"
  mouseMode: 
    set: |
      if( value == "orbit" ) {
        this.navmode = "orbit";
      } else {
        this.navmode = "none";
      }
    value: "orbit"
children: 
  flat_terrain:
    extends: http://vwf.example.com/node3.vwf
    source: models/vwf_terrain.dae
    type: model/vnd.collada+xml
    properties:
      translationnew: [ 0, 0, 0 ]
      rotationnew: [1, 0, 0, 0 ]
      scalenew: 0.008
  sceneCenter:
    extends: http://vwf.example.com/node3.vwf
    properties:
      translationnew: [ 0, 0, 0 ]
  predGroup:
    extends: http://vwf.example.com/node3.vwf 
    properties:
      fly-flying: true
    children:
      predator:
        extends: http://vwf.example.com/node3.vwf
        source: models/Predator.dae
        type: model/vnd.collada+xml
        properties:
          translationnew: [ 0, 500, 1800 ]
          rotationnew: [0, 0, 0 ]
          scalenew: 50
      cone:
        extends: http://vwf.example.com/node3.vwf
        source: models/cone.dae
        type: model/vnd.collada+xml
        properties:
          translationnew: [ 0, -300, -1100 ]
          rotationnew: [0, 0, 0 ]
          scalenew: [ 8, 8, 16 ]
    implements:
    - http://vwf.example.com/fly.vwf
scripts:
- text: |
    this.initialize = function() {
      this.camera.position = [ 0, 20000, 10000 ];
      this.camera.rotation = [ 1.56, 0, 0 ];
      this.camera.far = 500000;
      this.camera.near = 2;   
      this.camera.lookAt = "http-vwf-example-com-node3-vwf-sceneCenter";  
    }
    var pushpinIndex = 1;
    var pushpin = {
      extends: "http://vwf.example.com/node3.vwf",
      source: "models/pushpinblack.dae",
      type: "model/vnd.collada+xml",
      properties: { 
        rotationnew: [ 0, 0, 0 ], 
        scalenew: 6
      },    
    };
    this.pointerUp = function( parms, pickInfo ){
      if( this.mouseMode == "pindrop") {
          this.pindrop( pickInfo );
      } 
    }
    this.pindrop = function( pickInfo ) {
      if ( pickInfo && pickInfo.globalPosition ) {
        pushpin.properties.position = pickInfo.globalPosition;

        var name = "pushpin"+pushpinIndex;
        vwf.createNode( "index-vwf", pushpin, name, undefined );
        pushpinIndex++;        
      }
    }
  type: application/javascript