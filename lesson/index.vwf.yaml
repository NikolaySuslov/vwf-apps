# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

--- 
extends: http://vwf.example.com/navscene.vwf
children:
  duck:
    extends: http://vwf.example.com/node3.vwf
    source: duck.dae
    type: model/vnd.collada+xml
    properties:
      translation: [ 15, 616, -90 ]
      rotation: [ 0, 0, 1, 180 ]
  lesson:
    extends: http://vwf.example.com/lesson/task.vwf
    children:
      step1:
        extends: http://vwf.example.com/lesson/task.vwf
        properties:
          text: First, do the first thing.
          cameraPoseRef: /cameraPose1
        scripts:
        - |
          this.entering = function() {
            console.info( "Step 1 entering" );
            var self = this;
            var duck = this.find( "/duck" )[ 0 ];
            duck.pointerClick = duck.events.add( function() {
              duck.pointerClick = duck.events.flush( self );
              console.info( "Step 1 completed" );
              self.completed();
              console.info( "Step 1 after completed");
            }, this );
            this.exiting = function() {
              console.info( "Step 1 exiting" );
            }
          } //@ sourceURL=step1.entering
      step2:
        extends: http://vwf.example.com/lesson/task.vwf
        properties:
          text: Second, do the second thing.
          cameraPoseRef: /cameraPose2
        scripts:
        - |
          this.entering = function() {
            console.info( "Step 2 entering" );
            var self = this;
            var duck = this.find( "/duck" )[ 0 ];
            duck.pointerClick = duck.events.add( function() {
              duck.pointerClick = duck.events.flush( self );
              console.info( "Step 2 completed" );
              self.completed();
              console.info( "Step 2 after completed");
            }, this );
            this.exiting = function() {
              console.info( "Step 2 exiting" );
            }
          } //@ sourceURL=step2.entering
    scripts:
    - |
      this.entering = function() {
        console.info( "Lesson entering" );
        this.exiting = function() {
          console.info( "Lesson exiting" );
        }
      } //@ sourceURL=lesson.entering
  cameraPose1:
    extends: http://vwf.example.com/node3.vwf
    properties:
      translation: [ 0, 0, 0 ]
      rotation: [ 1, 0, 0, 0 ]
  cameraPose2:
    extends: http://vwf.example.com/node3.vwf
    properties:
      translation: [ 0, 0, 616 ]
      rotation: [ 1, 0, 0, -45 ]
  light1:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "directional"
      constantAttenuation: 1
      rotation: [ 1, 0, 0, -45 ]
  light2:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "directional"
      constantAttenuation: 1
      rotation: [ -1, 0, 0, 225 ]
scripts:
- |
  this.initialize = function() {
    var self = this;
    this.lesson.enter();
    this.lesson.completed = function() {
      console.info( "Lesson completed");
      self.lesson.exit();
    }
  } //@ sourceURL=index.vwf
