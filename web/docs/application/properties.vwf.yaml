---
# Properties declare the component's public variables. The component inherits properties from its
# prototype and receives copies of properties declared in its behaviors. Initializing those
# properties here will override the defaults.
properties:
  # Most declarations use a short specifier and only provide the value.
  short:
    value
  # The long specifier supports accessor functions.
  long:
    get: | # calculate and return the value
      return this.long // protected from infinite recursion
    set: | # calculate and set the value
      this.long = value // protected from infinite recursion
    value: # the value is available to the accessor functions
      value
  # Accessors allow the component to detect changes,
  notify:
    set: |
      this.something( value, this.notify ) // new value, old value
      this.notify = value
    value:
      value
  # ... to heal to acceptable values,
  limit:
    set: |
      this.limit = Math.max( 0, Math.min( value, 1 ) )
    value:
      value
  # ... to accept only valid values,
  accept:
    set: |
      if ( typeof value == "string" )
        this.accept = value
    value:
      value
  # ... or to serve as a proxy for another.
  proxy:
    get: |
      return this.short // or any other calculation
    set: |
      this.short = value // or any other calculation
  # Declare `get` as `null` to prevent reads.
  wo:
    get: null
    value: value
  # Declare `set` as `null` to prevent writes.
  ro:
    set: null
    value: value
