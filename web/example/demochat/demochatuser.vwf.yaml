---
extends: http://vwf.example.com/node.vwf
properties:
  displayColor:
    set: | # calculate and set the value
      this.userColorChange(this.displayName, value);
      this.displayColor = value;
    get: | # calculate and return the value
      return this.displayColor;
    value:
      "#000000"
  displayName: ""
  lastHeartbeat: undefined
  alertSound: "None"
methods:
  renameUser:
  playSound:
  testMessageForName:
  removeUser:
  sendMessage:
events:
  userColorChange:
  userRename:
  playSoundEvent:
scripts:
- |
  var entityMap = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': '&quot;',
    "'": '&#39;',
    "/": '&#x2F;'
  };

  this.escapeHtml = function( string ) {
    return String( string ).replace( /[&<>"'\/]/g, function ( s ) {
      return entityMap[ s ];
    } );
  };


  // For each user, test the message to be sent (test if the users name is in the
  // message and posts an event to play an alert sound for the user if it is).
  // Then actually post the userMessage event to send the message to the various
  // views.
  this.sendMessage = function( message ) {
    this.parent.children.forEach( function ( entry ) {
      entry.testMessageForName( message );
    } );
    this.parent.parent.userMessage( this.displayName, this.displayColor, this.escapeHtml( message ) );
  };
  // Trigger the userRemoved event, then delete yourself.
  this.removeUser = function( ) {
    this.parent.parent.userRemoved( this.displayName, this.displayColor );
    vwf.deleteNode( this.id );
  };
  //Test the requested new username. If it is a valid username, raise the 
  // userRename event, then change our displayName.
  this.renameUser = function( newName ) {
    if ( this.parent.testUsername( newName ) ) {
      this.userRename( this.displayName, newName, this.displayColor );
      this.displayName = newName;
    }
  };
  //When playSound is called on this user, raise the playSoundEvent event with
  //the current alertSound property as its parameter.
  this.playSound = function( ) {
    this.playSoundEvent( this.alertSound );
  };
  //Perform a regular expression search on a message for my displayName as a self contained
  //word. If found, call the playSound method on myself.
  this.testMessageForName = function( message ) {
    var regExp = new RegExp( "\\b" + this.displayName + "\\b", "i" );
    if ( message.search( regExp ) > -1 ) {
      this.playSound( );
    }
  };