# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

--- 
extends: http://vwf.example.com/cesium.vwf
properties:
  controlClient: "NONE"
  cameraControllerData:
  cameraViewData: 
  imageryProvider: "bingAerial"
  backgroundColor: [ 0, 0, 0, 0 ]
  clientColors: [ [ 0, 0, 255 ], [ 255, 0, 0 ], [ 255, 255, 0 ], [ 0, 255, 0 ], [ 0, 255, 255 ], [ 255, 0, 255 ], [ 255, 153, 0 ], [ 153, 153, 153 ], [ 230, 230, 250 ], [ 0, 0, 0 ] ]
methods:
  createClient:
  locationCaptured:
  findClient:
  newClientVideo:
children:
  camera:
    extends: http://vwf.example.com/cesium/camera.vwf
    properties:
      position: [ 0, -14261948, 11360974 ]
  #sun: 
    #extends: http://vwf.example.com/cesium/sun.vwf 
  atmosphere: 
    extends: http://vwf.example.com/cesium/atmosphere.vwf 
    properties:
      visible: false
  skybox: 
    extends: http://vwf.example.com/cesium/skybox.vwf 
    properties:
      visible: false
  clients:
    extends: http://vwf.example.com/node.vwf
scripts:
- |
    this.initialize = function() {
    }
    this.createClient = function( moniker, loginName ) {
      console.info( "createClient( "+moniker+", "+loginName+" )" );
      var self = this;
      
      var clr, colorList = this.clientColors;
      clr = colorList.shift();
      this.clientColors = colorList;

      var clientDef = { 
        "extends": "http://vwf.example.com/cesium/client.vwf",
        "properties": {
          "displayName": loginName,
          "color": clr
        },
      }
      this.clients.children.create( "client"+moniker, clientDef, function( child ){
        child.createMarkers( moniker == self.moniker );
      } );
    }
    this.findClient = function( moniker ) {
      var client = undefined;
      var clientMoniker = "";
      var len = this.clients.children.length;
      for ( var i = 0; i < len && client === undefined; i++ ) {
        clientMoniker = this.clients.children[i].name;
        clientMoniker = clientMoniker.substr( 6, clientMoniker.length-1 );
        if ( moniker == clientMoniker ) {
          client = this.clients.children[i];
        }
      }
      return client;
    } 
    this.locationCaptured = function( parms ) {
      var client = this.findClient( parms.moniker );
      if ( client !== undefined ) {
        client.location = parms.location;
        client.longitude = parms.longitude;
        client.latitude = parms.latitude;
      } else {
        this.future( 2.0 ).locationCaptured( parms );
      }
    } //@ sourceURL = index.vwf